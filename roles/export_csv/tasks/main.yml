---
- name: "Find csv file (bundle)"
  block:
    - name: "Searching for file cvs file (bundle)"
      find:
        paths: "{{ op_csv_dir }}/manifests/"
        recurse: no
        file_type: file
        patterns: '*.clusterserviceversion.yaml'
      register: csv_find_bundle

    - name: "CSV file existence error message"
      fail:
        msg: "Could not find csv file in '{{ op_csv_dir }}'"
      when: csv_find_bundle.files|length == 0

    - name: "Set csv_file_path"
      set_fact:
        csv_file_path: "{{ csv_find_bundle.files[0].path }}"
  when: operator_format == "bundle"

- name: "Find csv file (manifest)"
  block:
    - name: "Searching for file cvs file (manifest)"
      find:
        paths: "{{ op_csv_dir }}"
        recurse: no
        file_type: file
        patterns: '*.clusterserviceversion.yaml'
      register: csv_find_manifest
    - fail:
        msg: "Could not find csv file in '{{ op_csv_dir }}'"
      when: csv_find_manifest.files|length == 0
    - set_fact:
        csv_file_path: "{{ csv_find_manifest.files[0].path }}"
  when: operator_format == "manifest"

- name: "Include the package path into the operator_vars (upstream only)"
  block:
  - name: "Check if csv file '{{ csv_file_path }}' exists"
    stat:
      path: "{{ csv_file_path }}"
    register: csv_file_st

  - name: Fail if package file doesn't exists
    fail:
    when: not csv_file_st.stat.exists

  - name: "Getting metadata content from csv"
    shell: "{{ yq_bin_path }} r {{ csv_file_path }} -t metadata"
    register: csv_data

  - name: "Sets operator variables from csv '{{ csv_file_path }}'"
    set_fact:
      operator_vars: "{{ operator_vars_tmp | from_yaml }}"
