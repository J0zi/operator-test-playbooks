---
- name: "y"
  set_fact:
    ocp_range_start_old: "0"


- name: "Set path to the file containing labels for version {{ item }}"
  set_fact:
    labels_file_path: "{{ stream_path }}/{{ dov_op_name }}/{{ item }}/Dockerfile"


#TODO: prerobit do pola, najprv rozdelit do prvkov podlaciarky. Ak nemam druhy prvok, podla minus, ak nemam druhy prvok beriem cele a hladam prvy znak =
#- name: "Getting content of package file '{{ pkg_file_path }}'"
#  shell: "cat {{ pkg_file_path }}"
#  register: pkg_file_data
#
#- name: "Parse package file"
#  set_fact:
#    op_manifest_pkg_vars: "{{ pkg_file_data.stdout | from_yaml }}"
#
#- name: "Sets Operator package name"
#  set_fact:
#    operator_package_name: "{{ op_manifest_pkg_vars.packageName }}"




- name: "Get info about supported cluster for {{ dov_op_name }} {{ item }}"
  shell: "grep 'com.redhat.openshift.versions=' {{ labels_file_path }}|head -n 1|awk -F'redhat.openshift.versions=\"' '{print $2}'|awk -F'\"' '{print $1}'"
  register: ocp_version_annotation

- name: "x"
  when: ocp_version_annotation.stdout is defined
  set_fact:
    ocp_version_annotation_stdout: "{{ ocp_version_annotation.stdout }}"

- name: "Backward compatibility, searching (v4.5,v4.6). Please note v4.6,v4.7 will not work."
  when: ocp_version_annotation.stdout.find("v4.5,v4.6") != -1 #found
  set_fact:
    ocp_range_start_old: "4.5"

- name: "Recognize specific version if \"=\" detected"
  when: ocp_version_annotation.stdout.find("=") != -1
  set_fact:
    ocp_versions: "{{ ( ocp_version_annotation.stdout ) | replace('=v','') }}"

- name: "Comparing current {{ ocp_versions }} to target {{ dov_cluster_ver }}"
  set_fact:
    final_list: "{{ final_list | default([]) + [item] }}"
  when:
      - ocp_version_annotation.stdout.find("=") != -1
      - ocp_versions is defined #TODO
      - ocp_versions is version(dov_cluster_ver, '=')
      - "(dov_cluster_ver is version(ocp_versions, '='))" #TODO
      - ocp_version_annotation.stdout.find("v4.5,v4.6") == -1

#- name: "Detect open version range by missing '-'"
#  when: ocp_version_annotation.stdout.find("-") == -1
#  set_fact:
#    ocp_open_range: true

- name: "Set specific versions if \"-\" detected"
  block:

  - name: "Set start if range or from some version defined"
    shell: "echo \"{{ ocp_version_annotation.stdout }}\"| awk -F'-' '{print $1}'|awk -F'v' '{print $2}'"
    register: ocp_range_start

  - name: "Set end when \"-\" detected"
    shell: "echo \"{{ ocp_version_annotation.stdout }}\"| awk -F'-' '{print $2}'|awk -F'v' '{print $2}'"
    register: ocp_range_end

  - name: "Add to {{ dov_cluster_ver }} list if cluster in supported range"
    set_fact:
      final_list: "{{ final_list | default([]) + [item] }}"
    when: "(dov_cluster_ver is version(ocp_range_start.stdout, '>='))  and (dov_cluster_ver is version(ocp_range_end.stdout, '<='))"

  when:
    - ocp_version_annotation.stdout.find("-") != -1
    - ocp_version_annotation.stdout.find("=") == -1
    - ocp_version_annotation.stdout.find("v4.5,v4.6") == -1

- name: "Set open range start temp, no end needed"
  set_fact:
    ocp_range_start_actual: "{{ ( ocp_version_annotation.stdout ) | replace('v','') }}"
  when:
    - ocp_version_annotation.stdout.find("-") == -1 # '-' not found
    - ocp_version_annotation.stdout.find("=") == -1
    - ocp_version_annotation.stdout.find("v4.5,v4.6") == -1

- name: "Set open range start, no end needed. For old compatibility and open range also."
  set_fact:
    ocp_range_start: "{{ ocp_range_start_old if (ocp_range_start_old == '4.5') else ocp_range_start_actual }}"
  when:
    - ocp_version_annotation.stdout.find("-") == -1 # '-' not found
    - ocp_version_annotation.stdout.find("=") == -1
#    - ocp_version_annotation.stdout.find("v4.5,v4.6") != -1

- name: "Add to {{ dov_cluster_ver }} list if operator version {{ item }} is in cluster open range starting at {{ ocp_range_start }}"
  set_fact:
    final_list: "{{ final_list | default([]) + [item] }}"
  when:
   - ocp_version_annotation.stdout.find("=") == -1
   - ocp_version_annotation.stdout.find("-") == -1 # '-' not found
   - dov_cluster_ver is version(ocp_range_start, '>=')



- name: "Unset 'ocp_versions' "
  set_fact:
    ocp_versions:

#TODO: add "4.6" - beginning from specific version
#TODO: Dockerfile supports version not supported by pipeline