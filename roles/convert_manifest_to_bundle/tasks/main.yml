- name: "Ensure that the operator manifest to bundle directory is empty"
  file:
    state: "absent"
    path: "{{ operator_manifest_to_bundle_dir }}"

- name: "Ensure that the operator manifest to bundle directory is created"
  file:
    state: "directory"
    path: "{{ operator_manifest_to_bundle_dir }}"

- name: "Copy manifest format files to {{ operator_manifest_to_bundle_dir }}"
  copy:
    src: "{{ operator_dir }}"
    dest: "{{ operator_manifest_to_bundle_dir }}"
    remote_src: yes

- name: "Checking for operator latest version"
  block:
    - name: "Find all versions"
      find:
        paths: "{{ operator_manifest_to_bundle_dir }}/{{ operator_dir | basename }}"
        recurse: no
        file_type: directory
      register: vd
  when: operator_version == "latest"

- set_fact:
    operator_version: "{{ vd.files | sort(attribute='path', reverse=True) | map(attribute='path') | list}}"

- set_fact:
    operator_name: "{{ operator_dir | basename }}"
    operator_version: "{{ operator_version[0] | basename }}"

- set_fact:
    bundle_image: "{{ bundle_registry }}/{{ bundle_image_namespace }}/{{ operator_name }}:v{{ operator_version }}"

- name: Remove bundle image {{ bundle_image }}
  shell: "docker rmi -f {{ bundle_image }}"

- name: Generate bundle image {{ bundle_image }}
  shell:
    cmd: "{{ opm_bin_path }} alpha bundle build --directory {{ operator_version }} --package {{ operator_name }} -t {{ bundle_image }}"
    chdir: "{{ operator_manifest_to_bundle_dir }}/{{ operator_name }}"

- name: Push bundle image {{ bundle_image }}
  shell: "docker push {{ bundle_image }}"

# - name: Push image {{ bundle_image }}
#   docker_image:
#     # Image will be centos:7
#     name: "localhost:5000/operators-test/{{ operator_name }}"
#     # Will be pushed to localhost:5000/centos:7
#     repository: "localhost:5000/operators-test/{{ operator_name }}"
#     tag: "v{{ operator_version }}"
#     push: yes
#     source: local