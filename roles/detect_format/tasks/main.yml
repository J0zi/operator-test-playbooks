---
- name: Handle operator input image
  block:
    - set_fact:
        image_protocol: "docker-daemon:"
    - name: Handle operator image input
      include_role:
        name: convert_bundle_image_to_dir
  when:
    - operator_input_image != ""

- name: Detect operator format
  block:

    - fail:
        msg: "Operator version is unefined !!! Try '-e operator_version=x.y.z'."
      when: operator_version is undefined

    - name: Search for annotations.yml
      find:
        paths: "{{ operator_dir }}/{{ operator_version }}/metadata"
        patterns: "annotations.yaml"
      register: annotations_presence

    - name: Set operator_format to package manifest or bundle
      set_fact:
        operator_format: '{{ ''bundle'' if annotations_presence.files else ''manifest'' }}'
        operator_name: "{{ operator_dir | basename }}"
        operator_dir_name: "{{ operator_dir | basename }}"
        operator_base_dir: "{{ operator_dir | dirname }}"

    - name: "Export CSV variables"
      include_role:
        name: export_csv
      vars:
        op_csv_dir: "{{ operator_dir }}/{{ operator_version }}"

    - name: "Export Package variables"
      include_role:
        name: export_manifest_package_info
      vars:
        op_dir: "{{ operator_dir }}"
      when: operator_format == "manifest"

    - name: Set operator name variable from csv
      set_fact:
        operator_name: "{{ operator_vars.metadata.name.split('.')[0] }}"
        image_protocol: "docker-daemon:"
        run_manifest_test: "{{ run_manifest_test | default(false) }}"
        run_bundle_test: "{{ run_bundle_test | default(true) }}"

